name: "publish"
on:
  release:
    types:
      - created

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS ARM64 (M1/M2)
          - platform: macos-latest
            args: '--target aarch64-apple-darwin --bundles app'

          # macOS x64 (Intel)
          - platform: macos-latest
            args: --target x86_64-apple-darwin

          # Linux ARM64
          - platform: ubuntu-22.04-arm
            args: --target aarch64-unknown-linux-gnu

          # Linux x64
          - platform: ubuntu-22.04
            args: --target x86_64-unknown-linux-gnu

          # Windows x64
          - platform: windows-latest
            args: --target x86_64-pc-windows-msvc

          # Windows ARM64（实验性支持）
          - platform: windows-11-arm
            args: --target aarch64-pc-windows-msvc

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' || matrix.platform == 'ubuntu-22.04-arm' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install dependencies (ubuntu arm only)
        if: matrix.platform == 'ubuntu-22.04-arm' # This must match the platform value defined above.
        run: |
          sudo apt-get install -y xdg-utils
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
      - name: install app dependencies
        run: npm i
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.MY_WORKFLOW }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "App v__VERSION__"
          releaseBody: |-
            See the assets to download this version and install.
            
            > Linux: .deb, .appimage
            > macOS: .app, .dmg
            > Windows: .exe, .msi
          releaseDraft: true
          prerelease: false
          includeDebug: false
          args: ${{ matrix.args }}
